export BASH_SILENCE_DEPRECATION_WARNING=1

export PS1="\u@\h:\w\\$ "

green() { echo -e "\033[32m$1\033[0m"; }
red()   { echo -e "\033[31m$1\033[0m"; }
yellow(){ echo -e "\033[33m$1\033[0m"; }

# Let me type 'up 3' instead of 'cd ../../..'
function up() {
    num=$1
    while [ $num -gt 0 ]; do
        cd ..
        num=$(( num - 1 ))
    done
}

function x() {
    if [[ "$1" == "" ]]; then
        echo "Usage: x <script_file>"
        echo ""
        echo "  which makes <script_file> user executable and"
        echo "  then runs the script"
    else
        chmod 700 $1 && ./$1
    fi
}

# 've' - creates basic Python virtualenv
# 've flask requests' - creates Python virtualenv with flask and requests installed.
# 've wad' - creates Python virtualenv with libraries for Web App Dev class
function ve() {
    python3 -m venv env
    . env/bin/activate
    if [[ $# -ne 0 ]]; then
        if [[ "$1" == "wad" ]]; then
            pip install Flask Flask-Session SQLAlchemy Flask-SQLAlchemy requests
        else
            pip install $@
        fi
        echo ""
        green "ðŸš€ Libs loaded and virtualenv activated! Let's go! ðŸš€"
    else
        echo ""
        green "ðŸš€ Virtualenv activated! Let's go! ðŸš€"
    fi
}

if [[ $(uname) == "Darwin" ]]; then
    # ----- macOS stuff -----
    # Things I often do on my Mac include LaTeX, Sphinx, programming languages,
    # and Python of various versions.

    #export PATH=~/bin:$PATH:/usr/local/smlnj/bin:/Applications/Postgres.app/Contents/Versions/latest/bin
    export PATH=~/bin:${PATH}
    export PATH=/usr/local/opt/sphinx-doc/bin:${PATH}
    export PATH="/usr/local/opt/openjdk@21/bin:$PATH"
    export PATH=/usr/local/smlnj/bin:"$PATH"

    #export CPPFLAGS="-I/usr/local/opt/openjdk@21/include"

    export LDFLAGS="-L/usr/local/opt/zlib/lib"
    export CPPFLAGS="-I/usr/local/opt/zlib/include -I/usr/local/opt/openjdk@21/include"
    # Antlr
    export CLASSPATH=".:/usr/local/lib/antlr-4.8-complete.jar:$CLASSPATH"
    alias antlr4='java -jar /usr/local/lib/antlr-4.8-complete.jar'
    alias grun='java org.antlr.v4.gui.TestRig'

    eval "$(pyenv init -)"
fi

alias l="ls -alF"
alias cd..="cd .."
alias sl=ls
